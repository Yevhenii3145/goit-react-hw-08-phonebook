{"version":3,"file":"static/js/152.8ad029ca.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","components/Container/Container.styled.jsx","components/Title/Title.styled.jsx","components/Title/Title.jsx","components/Form/Form.styled.jsx","redux/contacts/contacts-selectors.js","components/Form/Form.jsx","components/ContactList/ContactList.styled.jsx","components/ContactItem/ContacItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Heading/Heading.styled.jsx","components/Heading/Heading.jsx","redux/filter/filter-selectors.js","components/Contacts/Contacts.jsx","pages/MyContactsPage/MyContactsPage.jsx","shared/hooks/useForm.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","import styled from '@emotion/styled'\n\nexport const Container = styled.div`\n    max-width: 1200px;\n    margin: 0 auto;\n    /* outline: 2px solid red; */\n    position: relative; \n`\n","import styled from '@emotion/styled'\n\nexport const Title = styled.h1`\n    padding-top: 20px;\n    margin-bottom: 20px;\n    text-align: center;\n    text-transform: uppercase;\n    color: orange;\n    font-weight: bold;\n    font-size: 28px;\n`","import { Title } from './Title.styled';\nimport PropTypes from 'prop-types';\n\nexport const TitlePage = ({ text }) => {\n    return <Title>{text}</Title>\n};\n\nTitlePage.propTypes = {\n    text: PropTypes.string.isRequired,\n};","import styled from '@emotion/styled'\n\nexport const FormMarcup = styled.form`\n    outline: 2px solid red;\n    position: relative;\n    height: 280px;\n    padding: 40px;\n    background-color: #53c70c;\n    box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14), 0px 2px 1px rgba(0, 0, 0, 0.2);\n    border-radius: 4px;\n    display: flex;\n    flex-direction:column;\n    max-width: 45%;\n`\nexport const FormLabel = styled.label`\n    color: white;\n`\nexport const FirstInput = styled.input`\n    max-width: 100%;\n    background-color: #ffbb32;\n    height: 70px;\n    border-radius: 10px;\n    font-size: 40px;\n    font-style: italic;\n    color:white;\n    padding-left: 30px;\n    border-color: white;\n    &:hover,\n    &focus {\n        scale:1.1;\n        margin-top: 4px;\n    }\n`\nexport const SecondInput = styled.input`\n    max-width: 100%;\n    background-color: #296cf1;\n    height: 70px;\n    border-radius: 10px;\n    border-color: grey;\n    padding-left: 30px;\n    font-size: 40px;\n    font-style: italic;\n    color:white;\n    &:hover,\n    &focus {\n        scale:1.1;\n        margin-top: 4px;\n    }\n`\nexport const FormButton = styled.button`\n    width: 150px;\n    height: 40px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin-top: 20px;\n    background-color: gold;\n    color:white;\n    font-weight: 700;\n    font-size: 20px;\n    font-style: italic;\n    border-radius: 6px;\n    border: none;\n\n    &:hover,\n    &:focus {\n        background-color: white;\n        color: gold;\n        scale:1.1;\n    }\n`","export const getContacts = store => store.contacts.items;\n\nexport const getState = ({ contacts }) => ({\n  loading: contacts.loading,\n  error: contacts.error,\n});\n\nexport const getFilteredContacts = ({ contacts, filter }) => {\n  if (filter.length === 0) {\n    return contacts.items;\n  }\n\n  const normalisedFilter = filter.toLowerCase();\n\n  const filteredContacts = contacts.items.filter(({ name }) => {\n\n    const normalizedName = name.toLowerCase();\n    const result = normalizedName.includes(normalisedFilter);\n\n    return result;\n  });\n  \n  return filteredContacts;\n};\n","import { useMemo } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { nanoid } from 'nanoid';\n\nimport { FormMarcup, FormLabel, FirstInput, SecondInput, FormButton } from './Form.styled';\nimport useForm from 'shared/hooks/useForm';\nimport { addContact, isDublicate } from 'redux/contacts/contacts-operation';\nimport { getFilteredContacts} from 'redux/contacts/contacts-selectors';\n\nconst initialState = {\n    name: '',\n    number: '',\n};\n\nexport default function Form() {\n    \n    const inputNameId = useMemo(()=> nanoid(), []);\n    const inputPhoneId = useMemo(()=> nanoid(), []);\n\n    const contacts = useSelector(getFilteredContacts);\n    const dispatch = useDispatch ();\n\n        \n    const onSubmit =  (data) => {\n        const action = addContact(data);\n\n        if(isDublicate(data,contacts)) {\n          return alert(`${data.name} is already in contacts!`)\n        }\n        dispatch(action);\n    };\n\n    const {state, handleChange, handleSubmit} = useForm({initialState, onSubmit});\n    const {name, number} = state;\n\n    return (\n        <FormMarcup onSubmit={handleSubmit}>\n            <FormLabel htmlFor={inputNameId}>Name</FormLabel>\n            <FirstInput\n                id={inputNameId}\n                type=\"text\"\n                name=\"name\"\n                value={name}\n                onChange={handleChange}\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                required\n            />\n\n            <FormLabel htmlFor={inputPhoneId}>Phone</FormLabel>\n            <SecondInput\n                id={inputPhoneId}\n                type=\"tel\"\n                name=\"number\"\n                value={number}\n                onChange={handleChange}\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                required\n            />\n            <FormButton type='submit'>Add contact</FormButton>\n        </FormMarcup>\n    );\n};\n","import styled from '@emotion/styled'\n\nexport const ContactsList = styled.ul`\n    margin-top: 20px;\n    /* outline:1px solid blue; */\n    display:flex;\n    justify-content: start;\n    flex-wrap: wrap;\n    list-style:  none;\n    background-color: #8e398e;\n    border-radius: 10px;\n`\n","import styled from '@emotion/styled';\n\nexport const ContactElement = styled.li`\n    margin-top: 40px;\n    font-size:35px;\n    font-weight: 700;\n    color: greenyellow;\n    margin-left: 40px; \n    display: flex; \n    align-items: center;\n    margin-top: 20px;\n    height: 60px;\n    margin-right: 40px;\n`\nexport const DeletButton = styled.button`\n    margin-left: 20px;\n    background-color: #cf2828;\n    color: white;\n    height: 40px;\n    width:80px;\n    font-weight: 700;\n    font-size: 20px;\n    font-style: italic;\n    border-radius: 6px;\n    border: none;\n    &:hover,\n    &:focus {\n        background-color: white;\n        color: greenyellow;\n        scale:1.2;\n    }\n`","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { ContactElement, DeletButton } from './ContacItem.styled';\nimport { removeContact } from 'redux/contacts/contacts-operation';\n\n\nexport default function ContactItem({ name, number, id, text }) {\n  const dispatch = useDispatch();\n\n  const removeOneContact = id => {\n    const action = removeContact(id);\n    dispatch(action);\n  };\n  \n  return (\n    <ContactElement>{name}: {number}<DeletButton onClick={() => { removeOneContact(id) }}>{text}\n    </DeletButton></ContactElement>\n  );\n};\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  // number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ContactsList } from './ContactList.styled';\nimport ContactItem from '../ContactItem/ContactItem';\n\n\nexport default function ContactList({items }) {\n\n  return (\n    <ContactsList>\n      {items.map(item => (<ContactItem\n        key={item.id}\n        id={item.id}\n        name={item.name}\n        number={item.number}\n        text={\"Delete\"}\n      />))}\n    </ContactsList>\n  );\n};\n\nContactList.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape()),\n};","import styled from '@emotion/styled'\n\nexport const FilterBox = styled.div`\n    position:absolute;\n    top: 80px;\n    right: 0px;\n    outline: 2px solid green;\n    height:280px;\n\n    background-color: gold;\n    display:flex;\n    flex-direction: column;\n    border-radius: 4px;\n    max-width: 45%;\n`\nexport const FormLabel = styled.label `\n    text-align: center;\n    margin-top: 20px;\n    font-size: 30px;\n    font-weight: 700px;\n    color: red;\n`\nexport const FormInput = styled.input`\n    background-color: blue;\n    max-width: 85%;\n    margin-left: 40px;\n    margin-top: 20px;\n    height: 100px;\n    border-radius: 10px;\n    font-size: 40px;\n    font-style: italic;\n    color:white;\n    padding-left: 30px;\n     &:hover,\n    &focus {\n        scale:1.1;\n        margin-top: 30px;\n        margin-right: 15px;\n        /* margin-left: 20px; */\n    }\n`","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { FilterBox, FormLabel, FormInput } from \"./Filter.styled\"\nimport { setFilter } from 'redux/filter/filter-slice';\n\n\nexport default function Filter({ filterId, filter }) {\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const { value } = event.target;\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <FilterBox>\n      <FormLabel htmlFor={filterId}>Find contacts by name</FormLabel>\n      <FormInput\n        id={filterId}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={handleChange}\n      />\n    </FilterBox>\n  );\n};\n\nFilter.propTypes = {\n  filterId: PropTypes.string.isRequired,\n  filter: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled'\n\n\nexport const HeadingStyled = styled.h2`\n    margin-top: 20px;\n    font-size: 24px;\n    line-height: 24px;\n    font-weight: 700;\n    letter-spacing: 0.5px;\n    text-align: center;\n    text-transform: uppercase;\n    color: green;\n`\n","import { HeadingStyled } from './Heading.styled'\nimport PropTypes from 'prop-types';\n\nexport const Heading = ({ text }) => {\n    return <HeadingStyled>{ text }</HeadingStyled>\n};\n\nHeading.propTypes = {\n    text: PropTypes.string.isRequired,\n};","export const getFilter = store => store.filter;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { nanoid } from 'nanoid';\nimport { Progress } from '@chakra-ui/react';\n\nimport Form from '../../components/Form/Form';\nimport ContactList from '../../components/ContactList/ContactList';\nimport Filter from '../../components/Filter/Filter';\nimport { Heading } from '../../components/Heading/Heading';\nimport { getFilter } from 'redux/filter/filter-selectors';\nimport {getState, getFilteredContacts,} from 'redux/contacts/contacts-selectors';\nimport { fetchContacts } from 'redux/contacts/contacts-operation';\nimport useAuth from 'shared/hooks/useAuth';\n\nconst Contacts = () => {\n    const contacts = useSelector(getFilteredContacts);\n    const { loading, error } = useSelector(getState);\n    const filter = useSelector(getFilter);\n    const filterId = nanoid();\n    const dispatch = useDispatch();\n    const isLogin = useAuth();\n    \n    useEffect(() => {\n      if(!isLogin) {\n        return;\n      }\n      dispatch(fetchContacts());\n    }, [isLogin,dispatch]);\n    \n    return (\n    <>\n    <Form />\n    <Heading text={'Contacts'}></Heading>\n    <Filter filterId={filterId} filter={filter} />\n    {!loading && contacts.length > 0 && (  \n    <ContactList items={contacts} />\n    )}\n    {loading && <Progress size='xs' isIndeterminate />}\n    {error && <p style={{color:\"red\", fontSize:\"40px\", fontWeight: \"bold\"}}>oops, something went wrong</p>}\n    </>\n    );\n};\n\nexport default Contacts;","import {Navigate} from \"react-router-dom\";\nimport useAuth from 'shared/hooks/useAuth';\n\nimport { Container } from '../../components/Container/Container.styled';\nimport { TitlePage } from '../../components/Title/Title';\nimport Contacts from 'components/Contacts/Contacts';\n\n\nconst MyContactsPage = () => {\n  const isLogin = useAuth();\n\n  if(!isLogin) {\n    return <Navigate to=\"/login\" />\n  }\n\n  return (\n    <Container>\n      <TitlePage text={'Phonebook'}></TitlePage>\n      <Contacts />\n    </Container>\n  );\n};\n\nexport default MyContactsPage;","import {useState} from \"react\";\n\nconst useForm = ({initialState, onSubmit}) => {\n    const [state, setState] = useState({...initialState});\n\n    const handleChange = ({target}) => {\n\n        const {value, name, type, checked} = target;\n        const newValue = type === \"checkbox\" ? checked : value;\n\n        setState(prevState => ({\n            ...prevState,\n            [name]: newValue,\n        }));\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        onSubmit({...state});\n        setState({...initialState});\n    };\n\n    return {state, setState, handleChange, handleSubmit};\n};\n\nexport default useForm;","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties","value","Container","styled","Title","TitlePage","text","FormMarcup","FormLabel","FirstInput","SecondInput","FormButton","getState","contacts","loading","error","getFilteredContacts","filter","length","items","normalisedFilter","toLowerCase","name","includes","initialState","number","Form","inputNameId","useMemo","nanoid","inputPhoneId","useSelector","dispatch","useDispatch","useForm","onSubmit","data","action","addContact","isDublicate","alert","state","handleChange","handleSubmit","htmlFor","id","type","onChange","pattern","title","required","ContactsList","ContactElement","DeletButton","ContactItem","onClick","removeContact","removeOneContact","ContactList","map","item","FilterBox","FormInput","Filter","filterId","event","target","setFilter","HeadingStyled","Heading","getFilter","store","isLogin","useAuth","useEffect","fetchContacts","size","isIndeterminate","style","color","fontSize","fontWeight","to","useState","setState","checked","newValue","prevState","e","preventDefault","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}
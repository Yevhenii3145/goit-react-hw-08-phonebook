{"version":3,"file":"static/js/724.1be6c423.chunk.js","mappings":"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","sources":["components/LoginForm/initialState.js","components/LoginForm/fields.js","components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx","webpack://react-homework-template/./src/shared/components/TextField/text-field.module.css?f04f","shared/components/TextField/TextField.jsx","shared/hooks/useForm.js"],"sourcesContent":["const initialState = {\n    email: \"\",\n    password: \"\",\n}\n\nexport default initialState;\n","const fields = {\n    email: {\n        label: \"User email\",\n        name: \"email\",\n        type: \"email\",\n        placeholder: \"Enter user email\",\n        required: true,\n    },\n    password: {\n        label: \"User password\",\n        name: \"password\",\n        type: \"password\",\n        placeholder: \"Enter user password (min 6 symbols)\",\n        required: true,\n    }\n}\n\nexport default fields;","import { useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { nanoid } from \"nanoid\";\nimport { Button } from '@chakra-ui/react';\n\nimport useForm from '../../shared/hooks/useForm';\nimport TextField from \"../../shared/components/TextField/TextField\";\nimport initialState from \"./initialState\";\nimport fields from \"./fields\";\n\nconst LoginForm = ({onSubmit}) => {\n    const {state, handleChange, handleSubmit} = useForm({initialState, onSubmit});\n\n    const emailId = useMemo(()=> nanoid(), []);\n    const passwordId = useMemo(()=> nanoid(), []);\n\n    const {email, password} = state;\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <TextField id={emailId} value={email} handleChange={handleChange} {...fields.email} />\n            <TextField id={passwordId} value={password} handleChange={handleChange} {...fields.password} />\n            <Button colorScheme='teal' variant='outline' size='lg' type=\"submit\">Login</Button>\n        </form>\n    );\n};\n\nexport default LoginForm;\n\nLoginForm.defaultProps = {\n    onSubmit: () => {}\n};\n\nLoginForm.propTypes = {\n    onSubmit: PropTypes.func,\n};\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { Navigate } from \"react-router-dom\";\nimport { Box, Heading } from '@chakra-ui/react';\nimport { login } from \"../../redux/auth/auth-operations\";\nimport { isLogin } from \"redux/auth/auth-selectors\";\n // components\nimport LoginForm from '../../components/LoginForm/LoginForm';\n\n\nexport default function LoginPage() {\n  const dispatch = useDispatch();\n  const isUserLogin = useSelector(isLogin);\n\n  const onLogin = (data) => {\n      dispatch(login(data));\n  };\n  if(isUserLogin) {\n    return <Navigate to=\"/contacts\" />\n  };\n    \n    return (\n      <Box w='1200px' ml='auto' mr='auto' mt=\"40px\"   className=\"container\">\n        <Heading as='h2' size='3xl' noOfLines={2} mb='40px' color='blue'>Login page</Heading>\n        <LoginForm onSubmit={onLogin} />\n      </Box>\n    );\n  };","// extracted by mini-css-extract-plugin\nexport default {\"formGroup\":\"text-field_formGroup__8dkRW\",\"field\":\"text-field_field__HbtIT\"};","import PropTypes from \"prop-types\";\nimport { Input } from '@chakra-ui/react';\n\nimport styles from \"./text-field.module.css\";\n\nconst TextField = ({id, label, value, name, handleChange, type, checked, className, placeholder, required, pattern}) => {\n    const fullClassName = className ? `${styles.field} ${className}` : styles.field;\n\n    return (\n        <div className={styles.formGroup}>\n            {label && <label style={{width: \"80px\", color: \"orange\"}} htmlFor={id}>{label}</label>}\n            <Input variant='filled'  id={id} value={value} checked={checked} name={name} onChange={handleChange} type={type} className={fullClassName} placeholder={placeholder} required={required} pattern={pattern} />\n        </div>\n    );\n};\n\nexport default TextField;\n\nTextField.defaultProps = {\n    type: \"text\",\n    required: false,\n};\n\nTextField.propTypes = {\n    id: PropTypes.string, \n    label: PropTypes.string, \n    value: PropTypes.string, \n    name: PropTypes.string.isRequired, \n    handleChange: PropTypes.func.isRequired, \n    type: PropTypes.string, \n    className: PropTypes.string, \n    placeholder: PropTypes.string,  \n    required: PropTypes.bool, \n    pattern: PropTypes.string,\n};","import {useState} from \"react\";\n\nconst useForm = ({initialState, onSubmit}) => {\n    const [state, setState] = useState({...initialState});\n\n    const handleChange = ({target}) => {\n\n        const {value, name, type, checked} = target;\n        const newValue = type === \"checkbox\" ? checked : value;\n\n        setState(prevState => ({\n            ...prevState,\n            [name]: newValue,\n        }));\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        onSubmit({...state});\n        setState({...initialState});\n    };\n\n    return {state, setState, handleChange, handleSubmit};\n};\n\nexport default useForm;"],"names":["email","password","label","name","type","placeholder","required","LoginForm","onSubmit","useForm","initialState","state","handleChange","handleSubmit","emailId","useMemo","nanoid","passwordId","TextField","id","value","fields","colorScheme","variant","size","LoginPage","dispatch","useDispatch","useSelector","isLogin","to","w","ml","mr","mt","className","as","noOfLines","mb","color","data","login","defaultProps","checked","pattern","fullClassName","styles","style","width","htmlFor","onChange","useState","setState","target","newValue","prevState","e","preventDefault"],"sourceRoot":""}
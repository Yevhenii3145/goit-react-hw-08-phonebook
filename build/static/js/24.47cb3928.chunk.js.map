{"version":3,"file":"static/js/24.47cb3928.chunk.js","mappings":"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","sources":["components/RegisterForm/initialState.js","components/RegisterForm/fields.js","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.jsx","webpack://react-homework-template/./src/shared/components/TextField/text-field.module.css?f04f","shared/components/TextField/TextField.jsx","shared/hooks/useForm.js"],"sourcesContent":["const initialState = {\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n}\r\n\r\nexport default initialState;","const fields = {\r\n    name: {\r\n        label: \"User name\",\r\n        name: \"name\",\r\n        type: \"text\",\r\n        placeholder: \"Enter user name\",\r\n        required: true,\r\n    },\r\n    email: {\r\n        label: \"User email\",\r\n        name: \"email\",\r\n        type: \"email\",\r\n        placeholder: \"Enter user email\",\r\n        required: true,\r\n    },\r\n    password: {\r\n        label: \"User password\",\r\n        name: \"password\",\r\n        type: \"password\",\r\n        placeholder: \"Enter user password (min 6 symbols)\",\r\n        required: true,\r\n    }\r\n}\r\n\r\nexport default fields;","import { useMemo } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { nanoid } from \"nanoid\";\r\nimport { Button } from '@chakra-ui/react';\r\n\r\nimport useForm from '../../shared/hooks/useForm';\r\nimport TextField from \"../../shared/components/TextField/TextField\";\r\nimport initialState from \"./initialState\";\r\nimport fields from \"./fields\";\r\n\r\nconst RegisterForm = ({onSubmit}) => {\r\n    const {state, handleChange, handleSubmit} = useForm({initialState, onSubmit});\r\n\r\n    const nameId = useMemo(()=> nanoid(), []);\r\n    const emailId = useMemo(()=> nanoid(), []);\r\n    const passwordId = useMemo(()=> nanoid(), []);\r\n\r\n    const {name, email, password} = state;\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <TextField id={nameId} value={name} handleChange={handleChange} {...fields.name} />\r\n            <TextField id={emailId} value={email} handleChange={handleChange} {...fields.email} />\r\n            <TextField id={passwordId} value={password} handleChange={handleChange} {...fields.password} />\r\n            <Button colorScheme='teal' variant='outline' size='lg' type=\"submit\" >Register</Button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default RegisterForm;\r\n\r\nRegisterForm.defaultProps = {\r\n    onSubmit: () => {}\r\n};\r\n\r\nRegisterForm.propTypes = {\r\n    onSubmit: PropTypes.func,\r\n};\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport {Navigate} from \"react-router-dom\";\r\nimport { Box, Heading } from '@chakra-ui/react';\r\nimport { signup } from 'redux/auth/auth-operations';\r\nimport { isLogin } from 'redux/auth/auth-selectors';\r\n// components\r\nimport RegisterForm from '../../components/RegisterForm/RegisterForm';\r\n\r\n\r\nexport default function RegisterPage() {\r\n    const dispatch = useDispatch();\r\n    const isUserLogin = useSelector(isLogin);\r\n    \r\n    const onRegister = (data) => {\r\n        dispatch(signup(data));\r\n    };\r\n\r\n    if(isUserLogin) {\r\n      return <Navigate to=\"/contacts\" /> \r\n    };\r\n   \r\n    return (\r\n      <Box w='1200px' ml='auto' mr='auto' mt=\"40px\"   className=\"container\">\r\n        <Heading as='h2' size='3xl' noOfLines={2} mb='40px' color='green'>Register page</Heading>\r\n        <RegisterForm onSubmit={onRegister}/> \r\n      </Box>\r\n    );\r\n  };","// extracted by mini-css-extract-plugin\nexport default {\"formGroup\":\"text-field_formGroup__WGoma\",\"field\":\"text-field_field__KkYP5\"};","import PropTypes from \"prop-types\";\r\nimport { Input } from '@chakra-ui/react';\r\n\r\nimport styles from \"./text-field.module.css\";\r\n\r\nconst TextField = ({id, label, value, name, handleChange, type, checked, className, placeholder, required, pattern}) => {\r\n    const fullClassName = className ? `${styles.field} ${className}` : styles.field;\r\n\r\n    return (\r\n        <div className={styles.formGroup}>\r\n            {label && <label style={{width: \"80px\", color: \"orange\"}} htmlFor={id}>{label}</label>}\r\n            <Input variant='filled'  id={id} value={value} checked={checked} name={name} onChange={handleChange} type={type} className={fullClassName} placeholder={placeholder} required={required} pattern={pattern} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TextField;\r\n\r\nTextField.defaultProps = {\r\n    type: \"text\",\r\n    required: false,\r\n};\r\n\r\nTextField.propTypes = {\r\n    id: PropTypes.string, \r\n    label: PropTypes.string, \r\n    value: PropTypes.string, \r\n    name: PropTypes.string.isRequired, \r\n    handleChange: PropTypes.func.isRequired, \r\n    type: PropTypes.string, \r\n    className: PropTypes.string, \r\n    placeholder: PropTypes.string,  \r\n    required: PropTypes.bool, \r\n    pattern: PropTypes.string,\r\n};","import {useState} from \"react\";\n\nconst useForm = ({initialState, onSubmit}) => {\n    const [state, setState] = useState({...initialState});\n\n    const handleChange = ({target}) => {\n\n        const {value, name, type, checked} = target;\n        const newValue = type === \"checkbox\" ? checked : value;\n\n        setState(prevState => ({\n            ...prevState,\n            [name]: newValue,\n        }));\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        onSubmit({...state});\n        setState({...initialState});\n    };\n\n    return {state, setState, handleChange, handleSubmit};\n};\n\nexport default useForm;"],"names":["name","email","password","label","type","placeholder","required","RegisterForm","onSubmit","useForm","initialState","state","handleChange","handleSubmit","nameId","useMemo","nanoid","emailId","passwordId","TextField","id","value","fields","colorScheme","variant","size","RegisterPage","dispatch","useDispatch","useSelector","isLogin","to","w","ml","mr","mt","className","as","noOfLines","mb","color","data","signup","defaultProps","checked","pattern","fullClassName","styles","style","width","htmlFor","onChange","useState","setState","target","newValue","prevState","e","preventDefault"],"sourceRoot":""}